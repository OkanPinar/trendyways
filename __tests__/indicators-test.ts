
// "use strict";

// var assert = require ("assert");
// var tw = require ("../dist/trendyways.js");

import 'jest';
import * as tw from "../src";
import { BarData } from '../src';

describe("Indicators", () => {
    test("Money Flow Index test", () => {
        var volumes = [79370729, 67472022, 63121628, 71942510, 65147231, 74202811, 101610206, 95639685,
            82708097, 78503267, 92236562, 68771304, 91866901, 85013484, 83254495, 78696265,
            87574680, 82687609, 70929391, 88198865, 105631422, 73330395, 81067590];
        var values = [{ high: 4161, low: 4081, close: 4151 }, { high: 4181, low: 4110, close: 4117 }, { high: 4158, low: 4104, close: 4111 }, { high: 4136, low: 4066, close: 4077 }, { high: 4088, low: 4031, close: 4079 },
        { high: 4134, low: 4058, close: 4067 }, { high: 4095, low: 3981, close: 4077 }, { high: 4151, low: 4072, close: 4134 }, { high: 4150, low: 4102, close: 4120 }, { high: 4181, low: 4113, close: 4171 },
        { high: 4232, low: 4172, close: 4220 }, { high: 4228, low: 4177, close: 4215 }, { high: 4269, low: 4218, close: 4261 }, { high: 4282, low: 4234, close: 4278 }, { high: 4291, low: 4231, close: 4246 },
        { high: 4251, low: 4189, close: 4205 }, { high: 4256, low: 4141, close: 4248 }, { high: 4296, low: 4243, close: 4257 }, { high: 4299, low: 4249, close: 4293 }, { high: 4302, low: 4241, close: 4250 },
        { high: 4307, low: 4250, close: 4296 }, { high: 4326, low: 4289, close: 4297 }, { high: 4363, low: 4256, close: 4267 }] as { high: number, low: number, close: number, volume: number; }[];
        for (var i = 0; i < volumes.length; i++) {
            (values[i] as any).volume = volumes[i];
        }
        var result = [59.76142, 53.17167, 59.62856, 66.1453, 71.79791, 64.67398, 73.14163, 72.71666, 65.73574];
        var mfiResult = tw.mfi(values);
        for (var i = 14; i < mfiResult.length; i++) {
            expect(mfiResult[i].mfi?.toFixed(1)).toEqual(result[i - 14].toFixed(1));
        }
    });

    //   /**
    //    * MACD test using IBM close values from 2013-01-01 to 17-01-2014.
    //    * Test results obtained with R library "quantmod": MACD("IBM", from="2013-01-01", to="17-01-2014")
    //    */
    test("MACD test", function () {
        var testData = [
            { close: 196.35 }, { close: 195.27 }, { close: 193.99 }, { close: 193.14 },
            { close: 192.87 }, { close: 192.32 }, { close: 192.88 }, { close: 194.45 },
            { close: 192.62 }, { close: 192.50 }, { close: 192.59 }, { close: 193.65 },
            { close: 194.47 }, { close: 196.08 }, { close: 204.72 }, { close: 204.42 },
            { close: 204.97 }, { close: 204.93 }, { close: 203.90 }, { close: 203.52 },
            { close: 203.07 }, { close: 205.18 }, { close: 203.79 }, { close: 202.79 },
            { close: 201.02 }, { close: 199.74 }, { close: 201.68 }, { close: 200.16 },
            { close: 200.04 }, { close: 200.09 }, { close: 199.65 }, { close: 200.98 },
            { close: 200.32 }, { close: 199.31 }, { close: 198.33 }, { close: 201.09 },
            { close: 197.51 }, { close: 199.14 }, { close: 202.33 }, { close: 200.83 },
            { close: 202.91 }, { close: 205.19 }, { close: 206.53 }, { close: 208.38 },
            { close: 209.42 }, { close: 210.38 }, { close: 210.08 }, { close: 210.55 },
            { close: 212.06 }, { close: 215.80 }, { close: 214.92 }, { close: 213.21 },
            { close: 213.44 }, { close: 215.06 }, { close: 212.26 }, { close: 212.08 },
            { close: 210.74 }, { close: 212.36 }, { close: 210.89 }, { close: 213.30 },
            { close: 212.38 }, { close: 214.36 }, { close: 212.66 }, { close: 211.31 },
            { close: 209.41 }, { close: 209.32 }, { close: 209.22 }, { close: 212.00 },
            { close: 212.92 }, { close: 211.38 }, { close: 209.26 }, { close: 212.00 },
            { close: 209.67 }, { close: 207.15 }, { close: 190.00 }, { close: 187.83 },
            { close: 191.61 }, { close: 191.71 }, { close: 193.95 }, { close: 194.31 },
            { close: 199.15 }, { close: 202.54 }, { close: 199.63 }, { close: 202.39 },
            { close: 204.51 }, { close: 202.78 }, { close: 203.63 }, { close: 204.82 },
            { close: 203.24 }, { close: 204.47 }, { close: 202.47 }, { close: 203.21 },
            { close: 203.32 }, { close: 204.69 }, { close: 208.44 }, { close: 207.60 },
            { close: 208.65 }, { close: 206.99 }, { close: 206.16 }, { close: 205.72 },
            { close: 207.78 }, { close: 207.92 }, { close: 209.36 }, { close: 208.02 },
            { close: 208.95 }, { close: 206.19 }, { close: 202.74 }, { close: 203.80 },
            { close: 206.35 }, { close: 205.02 }, { close: 203.98 }, { close: 201.20 },
            { close: 203.77 }, { close: 202.20 }, { close: 203.04 }, { close: 204.87 },
            { close: 201.94 }, { close: 197.35 }, { close: 195.46 }, { close: 193.54 },
            { close: 194.98 }, { close: 194.86 }, { close: 195.65 }, { close: 191.11 },
            { close: 191.28 }, { close: 191.50 }, { close: 193.25 }, { close: 194.93 },
            { close: 194.98 }, { close: 191.30 }, { close: 192.25 }, { close: 192.80 },
            { close: 192.07 }, { close: 194.00 }, { close: 193.85 }, { close: 194.55 },
            { close: 197.99 }, { close: 193.54 }, { close: 194.09 }, { close: 194.98 },
            { close: 196.61 }, { close: 197.22 }, { close: 197.35 }, { close: 196.21 },
            { close: 196.01 }, { close: 195.04 }, { close: 195.81 }, { close: 195.16 },
            { close: 195.50 }, { close: 190.99 }, { close: 188.56 }, { close: 187.93 },
            { close: 187.82 }, { close: 189.09 }, { close: 188.42 }, { close: 187.53 },
            { close: 185.79 }, { close: 185.34 }, { close: 184.23 }, { close: 184.56 },
            { close: 184.86 }, { close: 185.19 }, { close: 185.42 }, { close: 184.74 },
            { close: 182.74 }, { close: 182.16 }, { close: 182.64 }, { close: 182.27 },
            { close: 183.96 }, { close: 183.13 }, { close: 184.15 }, { close: 183.03 },
            { close: 184.98 }, { close: 186.60 }, { close: 190.70 }, { close: 190.73 },
            { close: 192.17 }, { close: 193.15 }, { close: 192.16 }, { close: 194.42 },
            { close: 193.39 }, { close: 190.02 }, { close: 190.99 }, { close: 189.97 },
            { close: 189.47 }, { close: 190.22 }, { close: 186.92 }, { close: 185.18 },
            { close: 186.38 }, { close: 184.96 }, { close: 183.86 }, { close: 184.10 },
            { close: 182.01 }, { close: 178.72 }, { close: 181.32 }, { close: 184.77 },
            { close: 186.16 }, { close: 186.97 }, { close: 184.66 }, { close: 186.73 },
            { close: 174.83 }, { close: 173.78 }, { close: 172.86 }, { close: 174.97 },
            { close: 175.77 }, { close: 177.80 }, { close: 176.85 }, { close: 177.35 },
            { close: 182.12 }, { close: 180.15 }, { close: 179.21 }, { close: 179.23 },
            { close: 180.27 }, { close: 177.85 }, { close: 179.19 }, { close: 180.00 },
            { close: 179.99 }, { close: 182.88 }, { close: 183.07 }, { close: 183.55 },
            { close: 182.21 }, { close: 183.19 }, { close: 184.47 }, { close: 185.25 },
            { close: 185.19 }, { close: 184.13 }, { close: 181.30 }, { close: 178.94 },
            { close: 177.31 }, { close: 178.97 }, { close: 179.68 }, { close: 177.48 },
            { close: 176.08 }, { close: 175.74 }, { close: 176.08 }, { close: 177.67 },
            { close: 177.46 }, { close: 177.12 }, { close: 175.20 }, { close: 173.37 },
            { close: 172.80 }, { close: 177.85 }, { close: 175.76 }, { close: 178.70 },
            { close: 180.22 }, { close: 180.02 }, { close: 182.23 }, { close: 183.22 },
            { close: 185.35 }, { close: 185.08 }, { close: 186.41 }, { close: 187.57 },
            { close: 185.53 }, { close: 186.64 }, { close: 186.00 }, { close: 189.71 },
            { close: 187.97 }, { close: 187.38 }, { close: 187.26 }, { close: 184.16 },
            { close: 185.92 }, { close: 187.74 }, { close: 188.76 }, { close: 190.09 }
        ];
        var macdTest = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            1.65754960, 1.53745561, 1.36558626, 1.21065468, 1.07749703, 0.94343290, 0.88055663,
            0.79500891, 0.67875283, 0.54088660, 0.53672501, 0.38458302, 0.32602610, 0.40374827,
            0.40010647, 0.47544149, 0.61925614, 0.77719919, 0.96403208, 1.13895103, 1.29915537,
            1.39693680, 1.47487252, 1.57643159, 1.78021639, 1.88381552, 1.87715924, 1.85863713,
            1.88362980, 1.77530605, 1.66329290, 1.50593247, 1.42667740, 1.29276617, 1.26407186,
            1.19233443, 1.19700863, 1.12285943, 1.00116387, 0.82286064, 0.67035244, 0.53941100,
            0.53579399, 0.56153836, 0.51710540, 0.39632733, 0.40073399, 0.31154727, 0.14263140,
            -0.64733723, -1.35264065, -1.75011082, -2.04225251, -2.16214059, -2.21887050, -2.04526369,
            -1.75040206, -1.61548727, -1.38127548, -1.09772942, -0.93183167, -0.75756927, -0.56543456,
            -0.47091288, -0.34302598, -0.31771899, -0.26513048, -0.21658018, -0.12221988, 0.09999611,
            0.23952545, 0.38663683, 0.43256134, 0.43126764, 0.40822572, 0.46541984, 0.51017982, 0.59491991,
            0.60255332, 0.63741517, 0.55102867, 0.34385631, 0.21839053, 0.21632683, 0.16072377, 0.07497507,
            -0.10123613, -0.13835019, -0.22713131, -0.26144102, -0.21389202, -0.28868775, -0.52424272,
            -0.77855752, -1.04672241, -1.18933075, -1.29335775, -1.32925091, -1.52575140, -1.65726094,
            -1.73385618, -1.70371703, -1.59247196, -1.48518354, -1.53471407, -1.51775541, -1.46493132,
            -1.43705801, -1.31967604, -1.21883709, -1.09716752, -0.84814998, -0.82579296, -0.77637194,
            -0.69231486, -0.55178058, -0.41049636, -0.28990422, -0.23866264, -0.20395162, -0.21397861,
            -0.18800461, -0.19201932, -0.17911462, -0.35126076, -0.58255154, -0.78427523, -0.93904708,
            -0.99768176, -1.06058806, -1.13545342, -1.25472147, -1.35375348, -1.46371416, -1.52023858,
            -1.53518326, -1.51585360, -1.47396366, -1.45362395, -1.50707459, -1.55741681, -1.55915692,
            -1.55918773, -1.46883734, -1.41727594, -1.31676236, -1.27150670, -1.13725646, -0.94906754,
            -0.61430539, -0.34447910, -0.06834215, 0.18952130, 0.34660618, 0.56043941, 0.67739936, 0.61957555,
            0.60790817, 0.54902204, 0.47565343, 0.44423978, 0.27590264, 0.06725662, -0.04666376, -0.19576618,
            -0.35751720, -0.47044708, -0.64338617, -0.91392548, -1.00479107, -0.91582216, -0.77565175,
            -0.62208417, -0.59418961, -0.47641960, -0.89278223, -1.25812928, -1.57391130, -1.71306370,
            -1.76852669, -1.70234343, -1.67366495, -1.61017947, -1.32957182, -1.18218693, -1.09499882,
            -1.01333207, -0.89156874, -0.89357296, -0.82545151, -0.72664289, -0.64137852, -0.43901288,
            -0.26729777, -0.10876226, -0.04255170, 0.05287569, 0.18308889, 0.31686877, 0.41508605,
            0.44083670, 0.33249918, 0.14053372, -0.08344146, -0.18544661, -0.23211873, -0.36332140,
            -0.52445456, -0.66048742, -0.74494707, -0.73193978, -0.72286884, -0.72281822, -0.80072006,
            -0.93536556, -1.05672987, -0.91212783, -0.88275613, -0.71702394, -0.51065590, -0.35234118,
            -0.12554985, 0.09714513, 0.36429615, 0.55636085, 0.75810149, 0.95716194, 1.01208880, 1.09145564,
            1.11286062, 1.27708161, 1.31499355, 1.30384106, 1.27481414, 1.10420845, 1.03370099, 1.04481710, 1.08506735, 1.16066447];
        var signalTest = [0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0,
            1.127388273, 1.010087939, 0.915415354, 0.809248886, 0.712604329, 0.650833117, 0.600687788, 0.575638528,
            0.584362049, 0.622929478, 0.691149999, 0.780710206, 0.884399238, 0.986906750, 1.084499905, 1.182886242,
            1.302352272, 1.418644922, 1.510347786, 1.580005655, 1.640730485, 1.667645598, 1.666775057, 1.634606540,
            1.593020713, 1.532969805, 1.479190217, 1.421819060, 1.376856974, 1.326057465, 1.261078746, 1.173435125,
            1.072818589, 0.966137071, 0.880068454, 0.816362436, 0.756511029, 0.684474290, 0.627726229, 0.564490438,
            0.480118631, 0.254627459, -0.066826163, -0.403483094, -0.731236977, -1.017417700, -1.257708260, -1.415219345,
            -1.482255888, -1.508902165, -1.483376827, -1.406247346, -1.311364210, -1.200605222, -1.073571089, -0.953039447,
            -0.831036754, -0.728373201, -0.635724656, -0.551895762, -0.465960586, -0.352769246, -0.234310307, -0.110120880,
            -0.001584436, 0.084985980, 0.149633928, 0.212791110, 0.272268852, 0.336799064, 0.389949914, 0.439442966,
            0.461760107, 0.438179348, 0.394221583, 0.358642633, 0.319058861, 0.270242102, 0.195946455, 0.129087127, 0.057843439,
            -0.006013452, -0.047589165, -0.095808882, -0.181495649, -0.300908023, -0.450070899, -0.597922869, -0.737009845,
            -0.855458058, -0.989516726, -1.123065569, -1.245223690, -1.336922359, -1.388032279, -1.407462531, -1.432912839,
            -1.449881353, -1.452891346, -1.449724679, -1.423714951, -1.382739379, -1.325625007, -1.230130001, -1.149262593,
            -1.074684462, -0.998210542, -0.908924549, -0.809238911, -0.705371973, -0.612030107, -0.530414409, -0.467127250,
            -0.411302722, -0.367446042, -0.329779757, -0.334075957, -0.383771073, -0.463871903, -0.558906939, -0.646661904,
            -0.729447136, -0.810648393, -0.899463008, -0.990321102, -1.084999713, -1.172047486, -1.244674642, -1.298910433,
            -1.333921078, -1.357861653, -1.387704240, -1.421646753, -1.449148787, -1.471156575, -1.470692727, -1.460009369,
            -1.431359968, -1.399389314, -1.346962743, -1.267383701, -1.136768040, -0.978310253, -0.796316633, -0.599149046,
            -0.409998002, -0.215910520, -0.037248544, 0.094116274, 0.196874654, 0.267304131, 0.308973991, 0.336027148, 0.324002246,
            0.272653121, 0.208789745, 0.127878561, 0.030799408, -0.069449890, -0.184237147, -0.330174813, -0.465098064, -0.555242883,
            -0.599324657, -0.603876560, -0.601939170, -0.576835255, -0.640024650, -0.763645575, -0.925698721, -1.083171717,
            -1.220242713, -1.316662856, -1.388063274, -1.432486514, -1.411903574, -1.365960246, -1.311767960, -1.252080781,
            -1.179978374, -1.122697290, -1.063248134, -0.995927085, -0.925017371, -0.827816473, -0.715712732, -0.594322638,
            -0.483968451, -0.376599622, -0.264661919, -0.148355781, -0.035667415, 0.059633407, 0.114206561, 0.119471993,
            0.078889303, 0.026022120, -0.025606050, -0.093149120, -0.179410208, -0.275625651, -0.369489935, -0.441979904,
            -0.498157691, -0.543089796, -0.594615849, -0.662765792, -0.741558608, -0.775672453, -0.797089187, -0.781076137,
            -0.726992089, -0.652061906, -0.546759494, -0.417978570, -0.261523627, -0.097946732, 0.073262912, 0.250042718,
            0.402451934, 0.540252674, 0.654774263, 0.779235732, 0.886387296, 0.969878048, 1.030865267, 1.045533903, 1.043167320,
            1.043497276, 1.051811291, 1.073581927];
        var macdResults = tw.macd(testData, 'close');
        expect(tw.flat(macdResults, "macd").length).toEqual(macdTest.length);
        for (var i = 0; i < tw.flat(macdResults, "macd").length; i++) {
            expect(macdResults[i].macd.line.toFixed(5)).toEqual(macdTest[i].toFixed(5));
        }
        expect(tw.flat(macdResults.map(_result => _result.macd), 'signal').length)
            .toEqual(macdTest.length);
        for (var i = 0; i < macdResults.length; i++) {
            expect(macdResults[i].macd?.signal.toFixed(5)).toEqual(signalTest[i].toFixed(5));
        }
        for (var i = 0; i < macdResults.length; i++) {
            expect((macdResults[i].macd.line - macdResults[i].macd.signal).toFixed(5)).toEqual((macdTest[i] - signalTest[i]).toFixed(5));
        }
    });

    test("Momentum function test", function () {
        var values = [
            { close: 196.35 }, { close: 195.27 }, { close: 193.99 }, { close: 193.14 },
            { close: 192.87 }, { close: 192.32 }, { close: 192.88 }, { close: 194.45 },
            { close: 192.62 }, { close: 192.50 }
        ];
        var resultOrder1 = [-1.08, -1.28, -0.85, -0.27, -0.55, 0.56, 1.57, -1.83, -0.12];
        var resultOrder3 = [-3.21, -2.4, -1.67, -0.26, 1.58, 0.3, -0.38];
        var momentumValues = tw.momentum(values, 1);
        expect(momentumValues.length).toEqual(values.length);
        for (var i = 1; i < momentumValues.length; i++) {
            expect(momentumValues[i].mom.toFixed(5)).toEqual(resultOrder1[i - 1].toFixed(5));
        }
    });

    // /**
    //  * Rate of Change function test
    //  */
    test("Rate of Change", function () {
        var values = [{ close: 196.35 }, { close: 195.27 }, { close: 193.99 }, { close: 193.14 }, { close: 192.87 }, { close: 192.32 }, { close: 192.88 }, { close: 194.45 }, { close: 192.62 }, { close: 192.50 }];
        var resultOrder1 = [-0.00550, -0.00656, -0.00438, -0.001397, -0.00285, 0.00291, 0.00814, -0.00941, -0.00062];
        var resultOrder3 = [-0.016348, -0.01229, -0.008608, -0.0013461, 0.008192046, 0.001559, -0.001970];
        var rocValues = tw.roc(values, 1);
        expect(rocValues.length).toEqual(values.length);
        for (var i = 1; i < rocValues.length; i++) {
            expect(rocValues[i].roc.toFixed(5)).toEqual(resultOrder1[i - 1].toFixed(5));
        }
        var rocValues3 = tw.roc(values, 3);
        expect(rocValues3.length).toEqual(values.length);
        for (var i = 3; i < rocValues3.length; i++) {
            expect(rocValues3[i].roc.toFixed(5)).toEqual(resultOrder3[i - 3].toFixed(5));
        }
    });

    //  /**
    //   * RSI (relative strength index) test
    //   */
    test("Rate of Change", function () {
        var values = [
            { close: 44.34 }, { close: 44.09 }, { close: 44.15 }, { close: 43.61 }, { close: 44.33 },
            { close: 44.83 }, { close: 45.10 }, { close: 45.42 }, { close: 45.84 }, { close: 46.08 },
            { close: 45.89 }, { close: 46.03 }, { close: 45.61 }, { close: 46.28 }, { close: 46.28 },
            { close: 46.00 }, { close: 46.03 }, { close: 46.41 }, { close: 46.22 }, { close: 45.64 },
            { close: 46.21 }, { close: 46.25 }, { close: 45.71 }, { close: 46.45 }, { close: 45.78 },
            { close: 45.35 }, { close: 44.03 }, { close: 44.18 }, { close: 44.22 }, { close: 44.57 },
            { close: 43.42 }, { close: 42.66 }, { close: 43.13 }];
        var expected = [70.46, 66.24, 66.48, 69.34, 66.29, 57.91, 62.88, 63.20,
            56.01, 62.33, 54.67, 50.38, 40.01, 41.49, 41.9, 45.49,
            37.32, 33.09, 37.78];
        var result = tw.rsi(values, 14);
        expect(result.length).toEqual(values.length);
        for (var i = 14; i < result.length; i++) {
            expect(result[i].rsi.toFixed(1)).toEqual(expected[i - 14].toFixed(1));
        }
    });

    test("ATR test", function () {
        var values = [{ high: 48.70, low: 47.79, close: 48.16 }, { high: 48.72, low: 48.14, close: 48.61 },
        { high: 48.90, low: 48.39, close: 48.75 }, { high: 48.87, low: 48.37, close: 48.63 },
        { high: 48.82, low: 48.24, close: 48.74 }, { high: 49.05, low: 48.64, close: 49.03 },
        { high: 49.20, low: 48.94, close: 49.07 }, { high: 49.35, low: 48.86, close: 49.32 },
        { high: 49.92, low: 49.50, close: 49.91 }, { high: 50.19, low: 49.87, close: 50.13 },
        { high: 50.12, low: 49.20, close: 49.53 }, { high: 49.66, low: 48.90, close: 49.50 },
        { high: 49.88, low: 49.43, close: 49.75 }, { high: 50.19, low: 49.73, close: 50.03 },
        { high: 50.36, low: 49.26, close: 50.31 }, { high: 50.57, low: 50.09, close: 50.52 }];
        var result = tw.atr(values);
        var expectedTR = [0.91, 0.58, 0.51, 0.5, 0.58, 0.41, 0.26, 0.49, 0.60, 0.32, 0.93, 0.76, 0.45, 0.46, 1.10, 0.48, 0.35, 1.22, 0.65, 0.96];
        var expectedATR = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.55, 0.59, 0.59, 0.57, 0.62, 0.62, 0.64];
        for (var i = 0; i < result.length; i++) {
            expect(result[i].at.tr.toFixed(2)).toEqual(expectedTR[i].toFixed(2));
            expect(result[i].at.atr.toFixed(2)).toEqual(expectedATR[i].toFixed(2));
        }
    });
});
